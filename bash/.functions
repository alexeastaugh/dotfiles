# Alex Eastaugh ~/.functions

GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
CEXIT='\033[0m'


# Knife commands
knife-bootstrap() {
    knife bootstrap "$@" --ssh-user root --identity-file ~/.ssh/alex_personal/alex_01022017/alex_01022017 --node-name eastaughnode1 --run-list \'"$@"\'
}

knife-chef-client-run() {
   knife ssh 'name:"$@"' 'sudo chef-client' --ssh-user root --identity-file ~/.ssh/alex_personal/alex_01022017/alex_01022017 --attribute ipaddress 
}

# projects - Takes you to the projects folder and lists the contents
projects() {
    if [ -d ~/projects ];then
        cd ~/projects; echo -e ${GREEN}"You are now in${CEXIT} ${RED}${PWD}${CEXIT}"; ls -l
    else
        echo -e ${RED}"Projects folder not yet created"${CEXIT}
    fi
}

# dots - Take me to your dotfiles
dots() {
    cd ~/dotfiles; echo -e ${GREEN}"You are now in${CEXIT} ${RED}${PWD}${CEXIT}"; ls -l
}

# generatekey - Creates an rsa key with 4096 bytes and add the key name to the comments
sshgeneratekey() {
    if [ $# -eq 0 ];then
        echo -e ${RED}"Please supply a comment for the key file"${CEXIT}
    else
        ssh-keygen -t rsa -b 4096 -C "$@"
    fi
}

# cookbooks - Take me to your cookbooks
cookbooks() {
    if [ -d /home/$(whoami)/cookbooks ];then
        cd /home/$(whoami)/cookbooks; echo -e ${GREEN}"You are now in${CEXIT} ${RED}${PWD}${CEXIT}"; ls
    else
        echo -e ${RED}"Cookbooks have not been cloned yet!"${CEXIT}
    fi
}

# Convert youtube video to .mp3
youtube2mp3() {
    youtube-dl --extract-audio --audio-format mp3 --audio-quality 0 "$@"
}

connect_postgres_db() {
    psql -U "$1" -h "$2"
}

# ssh to old platform using ip address
connect() {
    ssh -i ~/.ssh/alex_vd/GetOpticsAWSKey2013.pem ubuntu@"$@"
}

# Skip the jumpbox and go straight to point B
jump() {
    ssh -t jumpbox1 ssh aeastaugh@"$@"
}

# AWS Hostname + IP ADDRESS

ONDEMAND=''
STAGING=''
LIVE=''

ondemand_instances() {
    aws --profile vdtest \
        --region eu-west-1 \
        opsworks describe-instances \
        --stack-id ${ONDEMAND} | jq -r '.Instances[] | {HOSTNAME: .Hostname, "IP ADDRESS": .PrivateIp, STATUS: .Status}'
}

staging_instances() {
    aws opsworks describe-instances \
        --stack-id ${STAGING} | jq -r '.Instances[] | {HOSTNAME: .Hostname, "IP ADDRESS": .PrivateIp, STATUS: .Status}'    
}

live_instances() {
    aws --region us-east-1 \
        opsworks describe-instances \
        --stack-id ${LIVE} | jq -r '.Instances[] | {HOSTNAME: .Hostname, "IP ADDRESS": .PrivateIp, STATUS: .Status}'
}

# Testing Opsworks form the cli

opsworks_update_cookbooks() {
    aws --profile vdtest --region eu-west-1 \
        opsworks create-deployment \
        --stack-id "$1" \
        --layer-id "$2" \
        --command "{\"Name\":\"update_custom_cookbooks\"}"
}

opsworks_configure() {
    aws --profile vdtest \
        --region eu-west-1 \
        opsworks create-deployment \
        --stack-id ${ONDEMAND} \
        --layer-id 83a373d1-b4c2-4f41-94de-5c53a7a7b6d8 \
        --command "{\"Name\":\"configure\"}"
}
